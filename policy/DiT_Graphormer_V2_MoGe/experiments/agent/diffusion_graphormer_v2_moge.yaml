# Copyright (c) Sudeep Dasari, 2023

# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.


defaults:
  - features: resnet_gn_nopool
  - _self_

_target_: data4robotics.models.diffusion_graphormer_v2_moge.DiffusionGraphormerAgent
odim: ${task.obs_dim}
# n_cams: ${task.n_cams}
n_cams: 3  # head + head_depth + head_normal
use_obs: add_token_graphormer_v2
dropout: 0.1
train_diffusion_steps: 100
eval_diffusion_steps: 10
ac_dim: ${task.ac_dim}
ac_chunk: ${ac_chunk}
imgs_per_cam: ${add:${img_chunk},${len:${task.train_buffer.goal_indexes}}}
share_cam_features: False
early_fusion: False
feat_norm: null
moge_pretrained_path: /scratch2/meat124/dit_ws/src/RoboTwin/policy/DiT_Graphormer_V2_MoGe/visual_features/moge_model/model_vits_normal.pt

graphormer_kwargs:
  urdf_path: /scratch2/meat124/dit_ws/src/RoboTwin/assets/embodiments/aloha-agilex/urdf/arx5_description_isaac.urdf
  max_degree: ${task.ac_dim}
  max_spatial: ${task.ac_dim}
  # 1. CLS token is connected to all other nodes
  embodiment_adjacency_matrix: [
      #  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 (node index)
      [  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], # 0: cls
      [  1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 1: left_joint_1
      [  1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 2: left_joint_2
      [  1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 3: left_joint_3
      [  1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 4: left_joint_4
      [  1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], # 5: left_joint_5
      [  1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], # 6: left_joint_6
      [  1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], # 7: left_gripper
      [  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], # 8: right_joint_1
      [  1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], # 9: right_joint_2
      [  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], # 10: right_joint_3
      [  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], # 11: right_joint_4
      [  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], # 12: right_joint_5
      [  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], # 13: right_joint_6
      [  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], # 14: right_gripper
  ]
  embodiment_degree_matrix: [
      14, # 0: cls (connected to all other nodes)
      2,  # 1: left_joint_1 (cls, joint_2)
      3,  # 2: left_joint_2 (cls, joint_1, joint_3)
      3,  # 3: left_joint_3 (cls, joint_2, joint_4)
      3,  # 4: left_joint_4 (cls, joint_3, joint_5)
      3,  # 5: left_joint_5 (cls, joint_4, joint_6)
      3,  # 6: left_joint_6 (cls, joint_5, gripper)
      2,  # 7: left_gripper (cls, joint_6)
      2,  # 8: right_joint_1 (cls, joint_2)
      3,  # 9: right_joint_2 (cls, joint_1, joint_3)
      3,  # 10: right_joint_3 (cls, joint_2, joint_4)
      3,  # 11: right_joint_4 (cls, joint_3, joint_5)
      3,  # 12: right_joint_5 (cls, joint_4, joint_6)
      3,  # 13: right_joint_6 (cls, joint_5, gripper)
      2,  # 14: right_gripper (cls, joint_6)
  ]
  embodiment_shortest_path_matrix: [
      #  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 (노드 인덱스)
      [  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], # 0: cls
      [  1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], # 1: left_joint_1
      [  1, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], # 2: left_joint_2
      [  1, 2, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], # 3: left_joint_3
      [  1, 2, 2, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], # 4: left_joint_4
      [  1, 2, 2, 2, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2], # 5: left_joint_5
      [  1, 2, 2, 2, 2, 1, 0, 1, 2, 2, 2, 2, 2, 2, 2], # 6: left_joint_6
      [  1, 2, 2, 2, 2, 2, 1, 0, 2, 2, 2, 2, 2, 2, 2], # 7: left_gripper
      [  1, 2, 2, 2, 2, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2], # 8: right_joint_1
      [  1, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 2, 2, 2, 2], # 9: right_joint_2
      [  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 2, 2, 2], # 10: right_joint_3
      [  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 2, 2], # 11: right_joint_4
      [  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 2], # 12: right_joint_5
      [  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1], # 13: right_joint_6
      [  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0], # 14: right_gripper
  ]

  # 2. CLS token is connected to only each arm root node
  # embodiment_adjacency_matrix: [
  #     #  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 (노드 인덱스)
  #     [  0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], # 0: cls
  #     [  1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 1: left_joint_1
  #     [  0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 2: left_joint_2
  #     [  0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 3: left_joint_3
  #     [  0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], # 4: left_joint_4
  #     [  0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], # 5: left_joint_5
  #     [  0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], # 6: left_joint_6
  #     [  0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], # 7: left_gripper
  #     [  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], # 8: right_joint_1
  #     [  0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], # 9: right_joint_2
  #     [  0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], # 10: right_joint_3
  #     [  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], # 11: right_joint_4
  #     [  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], # 12: right_joint_5
  #     [  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], # 13: right_joint_6
  #     [  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], # 14: right_gripper
  # ]
  # embodiment_degree_matrix: [
  #     2,  # 0: cls (left_joint_1, right_joint_1)
  #     2,  # 1: left_joint_1 (cls, joint_2)
  #     2,  # 2: left_joint_2 (joint_1, joint_3)
  #     2,  # 3: left_joint_3 (joint_2, joint_4)
  #     2,  # 4: left_joint_4 (joint_3, joint_5)
  #     2,  # 5: left_joint_5 (joint_4, joint_6)
  #     2,  # 6: left_joint_6 (joint_5, gripper)
  #     1,  # 7: left_gripper (joint_6)
  #     2,  # 8: right_joint_1 (cls, joint_2)
  #     2,  # 9: right_joint_2 (joint_1, joint_3)
  #     2,  # 10: right_joint_3 (joint_2, joint_4)
  #     2,  # 11: right_joint_4 (joint_3, joint_5)
  #     2,  # 12: right_joint_5 (joint_4, joint_6)
  #     2,  # 13: right_joint_6 (joint_5, gripper)
  #     1,  # 14: right_gripper (joint_6)
  # ]
  # embodiment_shortest_path_matrix: [
  #     #  0  1  2  3  4  5  6  7   8   9  10  11  12  13  14 (노드 인덱스)
  #     [  0, 1, 2, 3, 4, 5, 6, 7,  1,  2,  3,  4,  5,  6,  7], # 0: cls
  #     [  1, 0, 1, 2, 3, 4, 5, 6,  2,  3,  4,  5,  6,  7,  8], # 1: left_joint_1
  #     [  2, 1, 0, 1, 2, 3, 4, 5,  3,  4,  5,  6,  7,  8,  9], # 2: left_joint_2
  #     [  3, 2, 1, 0, 1, 2, 3, 4,  4,  5,  6,  7,  8,  9, 10], # 3: left_joint_3
  #     [  4, 3, 2, 1, 0, 1, 2, 3,  5,  6,  7,  8,  9, 10, 11], # 4: left_joint_4
  #     [  5, 4, 3, 2, 1, 0, 1, 2,  6,  7,  8,  9, 10, 11, 12], # 5: left_joint_5
  #     [  6, 5, 4, 3, 2, 1, 0, 1,  7,  8,  9, 10, 11, 12, 13], # 6: left_joint_6
  #     [  7, 6, 5, 4, 3, 2, 1, 0,  8,  9, 10, 11, 12, 13, 14], # 7: left_gripper
  #     [  1, 2, 3, 4, 5, 6, 7, 8,  0,  1,  2,  3,  4,  5,  6], # 8: right_joint_1
  #     [  2, 3, 4, 5, 6, 7, 8, 9,  1,  0,  1,  2,  3,  4,  5], # 9: right_joint_2
  #     [  3, 4, 5, 6, 7, 8, 9,10,  2,  1,  0,  1,  2,  3,  4], # 10: right_joint_3
  #     [  4, 5, 6, 7, 8, 9,10,11,  3,  2,  1,  0,  1,  2,  3], # 11: right_joint_4
  #     [  5, 6, 7, 8, 9,10,11,12,  4,  3,  2,  1,  0,  1,  2], # 12: right_joint_5
  #     [  6, 7, 8, 9,10,11,12,13,  5,  4,  3,  2,  1,  0,  1], # 13: right_joint_6
  #     [  7, 8, 9,10,11,12,13,14,  6,  5,  4,  3,  2,  1,  0], # 14: right_gripper
  # ]

noise_net_kwargs:
  time_dim: 256
  hidden_dim: 512
  num_blocks: 6
  dim_feedforward: 2048
  dropout: ${agent.dropout}
  nhead: 8
  activation: "gelu"
